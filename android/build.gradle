group 'com.sabiantech.sabian_native_common'
version '1.0-SNAPSHOT'


buildscript {
    ext.kotlin_version = '1.7.10'
    repositories {
        google()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    defaultConfig {
        minSdkVersion 16
        multiDexEnabled true
    }

    dependencies {
        implementation fileTree(include: ['*.jar'], dir: 'libs')

        implementation 'androidx.multidex:multidex:2.0.1'

        //Permissions
        implementation 'com.karumi:dexter:6.2.3'

        //Camera view
        implementation('com.otaliastudios:cameraview:2.7.2') {
            exclude group: 'com.google.android.gms'
        }

        implementation 'joda-time:joda-time:2.10'
        implementation 'com.google.code.gson:gson:2.8.5'
        implementation 'io.github.bryosabian:imagepicker:0.0.1-SNAPSHOT'

        //Coroutines
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.1'
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.1"

        //Event bus
        implementation("org.greenrobot:eventbus:3.3.1")

        testImplementation 'org.jetbrains.kotlin:kotlin-test'
        testImplementation 'org.mockito:mockito-core:5.0.0'
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen { false }
                showStandardStreams = true
            }
        }
    }
}
